import { useState , useCallback , useEffect} from 'react'

function App() {
  const [password,setPassword] = useState("")
  const [length, setLength] =useState(0)
  const [numberAllowed , setNumberAllowed] = useState(false)
  const [charAllowed , setCharAllowed] = useState(false)


 const passwordGenerator= useCallback(() => {
  let pass=""
  let str="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
  if(numberAllowed)
      str+="0123456789"
  if(charAllowed)
      str+="~!@`$#%^&*()-_+[]?"
  for(let i=1;i<=length;i++){
  let char=Math.floor(Math.random() * str.length )
  pass+=str.charAt(char);
  }
  setPassword(pass)
 }, [length , numberAllowed , charAllowed ])

 const copyPassword = useCallback(() => {
  window.navigator.clipboard.writeText(password)
  alert("message copied to ClipBoard")
 } , [password])
 
useEffect(() => {
  passwordGenerator()
},[length , numberAllowed , charAllowed, passwordGenerator])

  return(
<>
<div className=' bg-gray-700 rounded-xl mx-auto my-14 first_div ' >
  <h2 className='text-white text-3xl mb-6 underline text-center'>Password Generator</h2>
  <div className='flex items-center justify-center mb-6 '>
      <input className="w-8/12 md:w-80 lg:w-96 h-9 rounded-md text-center" type="text" placeholder='password' value={password} readOnly/>
      <button className='bg-red-600 text-white text-lg rounded-md w-14 md:w-16 h-9' onClick={copyPassword} >Copy</button>
  </div>
  <div className='md:flex md:space-x-4 lg:space-x-14 mb-5'>
      <div className='flex flex-col md:flex-row space-x-3 md:space-x-1 lg:space-x-4 '>
      <input type="range" min={0} max={100} value={length} className="cursor-pointer space-x-1 md:space-x-0" onChange={(e) => {setLength(e.target.value)} }/>
      <label className='text-xl text-white text-center'>Length : {length}</label>  </div>
  <div className='flex md:space-x-1 lg:space-x-2 justify-center'>
      <input type='checkbox' defaultChecked={numberAllowed} onChange={() => {setNumberAllowed((prev) => !prev);}}/>
      <label className='text-xl text-white'>Numbers</label>
  </div>
  <div className='flex md:space-x-1 lg:space-x-2 justify-center'>
      <input type='checkbox' defaultChecked={charAllowed} onChange={() => {setCharAllowed((prev) => !prev);}}/>
      <label className='text-xl text-white'>Characters</label>
  </div>  </div>
</div>
</>
  )
}

export default App
